{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  users: [],\n  selectedUser: null,\n  isLoading: false\n};\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setUsers(state, action) {\n      state.users = action.payload;\n      state.isLoading = false;\n    },\n    setSelectedUser(state, action) {\n      state.selectedUser = action.payload;\n    },\n    // updateUserData(state, action) {\n    //     const { userId, updatedFields } = action.payload;\n    //     const index = state.users.findIndex(user => user.id === userId);\n    //     if (index !== -1) {\n    //         state.users[index] = { ...state.users[index], ...updatedFields };\n    //     }\n    // },\n    setIsLoading(state, action) {\n      state.isLoading = action.payload;\n    }\n  }\n});\nexport const {\n  setUsers,\n  setSelectedUser,\n  updateUserData,\n  setIsLoading\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","users","selectedUser","isLoading","userSlice","name","reducers","setUsers","state","action","payload","setSelectedUser","setIsLoading","updateUserData","actions","reducer"],"sources":["/workspaces/infinite_synergy/frontend/src/redux/reducers/userReducer.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n    users: [],\n    selectedUser: null,\n    isLoading: false,\n};\n\nconst userSlice = createSlice({\n    name: 'user',\n    initialState,\n    reducers: {\n        setUsers(state, action) {\n            state.users = action.payload;\n            state.isLoading = false;\n        },\n        setSelectedUser(state, action) {\n            state.selectedUser = action.payload;\n        },\n        // updateUserData(state, action) {\n        //     const { userId, updatedFields } = action.payload;\n        //     const index = state.users.findIndex(user => user.id === userId);\n        //     if (index !== -1) {\n        //         state.users[index] = { ...state.users[index], ...updatedFields };\n        //     }\n        // },\n        setIsLoading(state, action) {\n            state.isLoading = action.payload;\n        }\n    },\n});\n\nexport const { setUsers, setSelectedUser, updateUserData, setIsLoading } = userSlice.actions;\nexport default userSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,EAAE;EACTC,YAAY,EAAE,IAAI;EAClBC,SAAS,EAAE;AACf,CAAC;AAED,MAAMC,SAAS,GAAGL,WAAW,CAAC;EAC1BM,IAAI,EAAE,MAAM;EACZL,YAAY;EACZM,QAAQ,EAAE;IACNC,QAAQA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACpBD,KAAK,CAACP,KAAK,GAAGQ,MAAM,CAACC,OAAO;MAC5BF,KAAK,CAACL,SAAS,GAAG,KAAK;IAC3B,CAAC;IACDQ,eAAeA,CAACH,KAAK,EAAEC,MAAM,EAAE;MAC3BD,KAAK,CAACN,YAAY,GAAGO,MAAM,CAACC,OAAO;IACvC,CAAC;IACD;IACA;IACA;IACA;IACA;IACA;IACA;IACAE,YAAYA,CAACJ,KAAK,EAAEC,MAAM,EAAE;MACxBD,KAAK,CAACL,SAAS,GAAGM,MAAM,CAACC,OAAO;IACpC;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,QAAQ;EAAEI,eAAe;EAAEE,cAAc;EAAED;AAAa,CAAC,GAAGR,SAAS,CAACU,OAAO;AAC5F,eAAeV,SAAS,CAACW,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}