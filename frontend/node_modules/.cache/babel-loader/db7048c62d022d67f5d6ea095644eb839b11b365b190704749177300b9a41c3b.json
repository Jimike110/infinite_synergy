{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\Code\\\\ReactJS\\\\infinite_synergy\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setUsers, setIsLoading, setSelectedUser, setPage } from \"./redux/reducers/userReducer\";\nimport UserDataForm from \"./components/UserDataForm\";\nimport UserList from \"./components/UserList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const users = useSelector(state => state.user.users);\n  const isLoading = useSelector(state => state.user.isLoading);\n  const dispatch = useDispatch();\n  const page = useSelector(state => state.user.page);\n  const limit = 1000;\n  const appUrl = \"http://\" + window.location.hostname;\n  useEffect(() => {\n    // Fetch user data when component mounts\n    fetchUserData();\n  }, [page]);\n  const fetchUserData = async () => {\n    dispatch(setIsLoading(true));\n    try {\n      const response = await fetch(`${appUrl}:3001/api/users?page=${page}&limit=${limit}`);\n      const data = await response.json();\n      dispatch(setUsers(data));\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    } finally {\n      dispatch(setIsLoading(false));\n    }\n  };\n  const nextPage = () => {\n    dispatch(setPage(page + 1));\n    dispatch(setSelectedUser(null));\n  };\n  const prevPage = () => {\n    dispatch(setPage(page - 1));\n    dispatch(setSelectedUser(null));\n  };\n  const handleSelectUser = user => {\n    dispatch(setSelectedUser(user));\n  };\n  const handleSaveData = async (userId, updatedFields) => {\n    try {\n      const response = await fetch(`${appUrl}:3001/api/users/${userId}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedFields)\n      });\n      const data = await response.json();\n      console.log('User data updated:', data);\n\n      // Update the user data in the users array\n      const updatedUsers = users.map(user => {\n        if (user.id === userId) {\n          return {\n            ...user,\n            ...updatedFields\n          };\n        }\n        return user;\n      });\n      dispatch(setUsers(updatedUsers));\n    } catch (error) {\n      console.error('Error updating user data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left\",\n        children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loader\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-and-pagination\",\n          children: [/*#__PURE__*/_jsxDEV(UserList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pagination-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"paginate-button prev\",\n              onClick: prevPage,\n              disabled: page === 1,\n              children: \"Previous Page\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"paginate-button next\",\n              disabled: users.length < limit || users.length === 0,\n              onClick: nextPage,\n              children: \"Next Page\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right\",\n        children: /*#__PURE__*/_jsxDEV(UserDataForm, {\n          onSaveData: handleSaveData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7Ne1mZ6RxadBg1Ww/H3m5yZZ8TE=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","setUsers","setIsLoading","setSelectedUser","setPage","UserDataForm","UserList","jsxDEV","_jsxDEV","App","_s","users","state","user","isLoading","dispatch","page","limit","appUrl","window","location","hostname","fetchUserData","response","fetch","data","json","error","console","nextPage","prevPage","handleSelectUser","handleSaveData","userId","updatedFields","method","headers","body","JSON","stringify","log","updatedUsers","map","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","length","onSaveData","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/Code/ReactJS/infinite_synergy/frontend/src/App.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setUsers, setIsLoading, setSelectedUser, setPage } from \"./redux/reducers/userReducer\";\r\nimport UserDataForm from \"./components/UserDataForm\";\r\nimport UserList from \"./components/UserList\";\r\n\r\nfunction App() {\r\n  const users = useSelector((state) => state.user.users);\r\n  const isLoading = useSelector((state) => state.user.isLoading);\r\n  const dispatch = useDispatch();\r\n  const page = useSelector((state) => state.user.page);\r\n  const limit = 1000;\r\n  const appUrl = \"http://\" + window.location.hostname;\r\n\r\n  useEffect(() => {\r\n    // Fetch user data when component mounts\r\n    fetchUserData();\r\n  }, [page]);\r\n\r\n  const fetchUserData = async () => {\r\n    dispatch(setIsLoading(true));\r\n    try {\r\n      const response = await fetch(`${appUrl}:3001/api/users?page=${page}&limit=${limit}`);\r\n      const data = await response.json();\r\n      dispatch(setUsers(data));\r\n    } catch (error) {\r\n      console.error('Error fetching users:', error);\r\n    } finally {\r\n      dispatch(setIsLoading(false));\r\n    }\r\n  };\r\n\r\n  const nextPage = () => {\r\n    dispatch(setPage(page + 1));\r\n    dispatch(setSelectedUser(null));\r\n  };\r\n\r\n  const prevPage = () => {\r\n    dispatch(setPage(page - 1));\r\n    dispatch(setSelectedUser(null));\r\n  };\r\n\r\n  const handleSelectUser = (user) => {\r\n    dispatch(setSelectedUser(user));\r\n  };\r\n\r\n  const handleSaveData = async (userId, updatedFields) => {\r\n    try {\r\n      const response = await fetch(`${appUrl}:3001/api/users/${userId}`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(updatedFields),\r\n      });\r\n      const data = await response.json();\r\n      console.log('User data updated:', data);\r\n      \r\n      // Update the user data in the users array\r\n      const updatedUsers = users.map(user => {\r\n        if (user.id === userId) {\r\n          return { ...user, ...updatedFields };\r\n        }\r\n        return user;\r\n      });\r\n      dispatch(setUsers(updatedUsers));\r\n    } catch (error) {\r\n      console.error('Error updating user data:', error);\r\n    }\r\n  };  \r\n  \r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"container\">\r\n        <div className=\"left\">\r\n        {isLoading ? (\r\n        <div className=\"loader\"><p>Loading...</p></div>\r\n      ) : (<div className=\"list-and-pagination\">\r\n          <UserList />\r\n          <div className=\"pagination-buttons\">\r\n          <button className=\"paginate-button prev\" onClick={prevPage} disabled={page === 1}>Previous Page</button>\r\n          <button className=\"paginate-button next\" disabled={users.length < limit || users.length === 0} onClick={nextPage}>Next Page</button>\r\n          </div>\r\n          </div>\r\n      ) }\r\n        </div>\r\n        <div className=\"right\">\r\n          <UserDataForm\r\n            onSaveData={handleSaveData}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}